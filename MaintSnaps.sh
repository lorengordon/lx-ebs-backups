#!/bin/bash
# shellcheck disable=SC1090,SC2155,SC2001,SC2015
#
# The purpose of this script is to find all backups associated 
# with my instance-ID with the intent of expiring any images that
# are older than the threshold date. The script will pull the the
# instance-ID from the instance meta-data URL, then search for
# Snapshots that were previously generated by the backup scripts
# found elsewhere in this tool-set.
#
# Dependencies:
# - Generic: See the top-level README_dependencies.md for script dependencies
#
# License:
# - This script released under the Apache 2.0 OSS License
#
######################################################################
PATH=/sbin:/usr/sbin:/bin:/usr/bin:/opt/AWScli/bin
export PROGNAME="$( basename "${BASH_SOURCE[0]}" )"
export PROGDIR="$( dirname "${BASH_SOURCE[0]}" )"
TZ=zulu

# Put the bulk of our variables into an external file so they
# can be easily re-used across scripts
# shellcheck source=/dev/null
source "${PROGDIR}/commonVars.env"
source PROGNAME="$( basename "${BASH_SOURCE[0]}" )"


# Grab a filtered list candidate snapshots and dump to an array
# * Filter for "Created By" equals "Automated Backup"
# * Filter for "Description" contains "<INSTANCE_ID>-bkup"
function SnapListToArray {
   local COUNT
   local SNAPIDEN
   local SNAPTIME
   local SNAPDESC
   local SNAPGRUP

   COUNT=0
   for SNAPLIST in $( aws ec2 describe-snapshots --output=text --filters \
           "Name=tag:Name,Values=AutoBack (${THISINSTID})*" \
           "Name=tag:Created By,Values=Automated Backup" --query \
           "Snapshots[].{F1:SnapshotId,F2:StartTime,F3:Description}" | \
         tr '\t' ';'
      )
   do
      SNAPIDEN=$(echo "${SNAPLIST}" | cut -d ";" -f 1)
      SNAPTIME=$( date -d "$(
               echo "${SNAPLIST}" | cut -d ";" -f 2 | \
               sed '{
                  s/\....Z$//
                  s/T/ /
               }'
            )" "+%s"
         )
      SNAPDESC=$(echo "${SNAPLIST}" | cut -d ";" -f 3)
      SNAPGRUP=$(echo "${SNAPDESC}" | sed 's/^.*-bkup-/GROUP_/')
      FIXLIST="${SNAPIDEN};${SNAPTIME};${SNAPGRUP}"
      SNAPARRAY[COUNT]="${FIXLIST}"
      COUNT=$(( COUNT + 1 ))
   done
}

function CheckSnapAge {
   local COUNT=0
   local SNAPIDEN
   local SNAPTIME
   local SNAPGRUP

   logIt "Beginning stale snapshot cleanup (killing files older than ${EXPDATE})" 0

   COUNT=0
   while [ ${COUNT} -lt ${#SNAPARRAY[@]} ]
   do
      SNAPIDEN="$( echo "${SNAPARRAY[${COUNT}]}" | cut -d ";" -f 1 )"
      SNAPTIME="$( echo "${SNAPARRAY[${COUNT}]}" | cut -d ";" -f 2 )"
      SNAPGRUP="$( echo "${SNAPARRAY[${COUNT}]}" | cut -d ";" -f 3 )"


      if [ $(( CURCTIME - SNAPTIME )) -gt $(( CURCTIME - EXPBEYOND )) ]
      then
         logIt "${SNAPIDEN} is older than expiry-horizon. Deleteing..." 0
         aws ec2 delete-snapshot --snapshot-id "${SNAPIDEN}" && \
            logIt "Deleted" 0 || \
              logIt "Delete of snapshot [${SNAPIDEN}] failed" 1

      else
         logIt "${SNAPIDEN} (${SNAPGRUP}) is younger than expiry-horizon (keeping)" 0
      fi

      COUNT=$(( COUNT + 1 ))
   done
}

SnapListToArray
CheckSnapAge
